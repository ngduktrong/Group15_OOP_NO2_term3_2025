package com.example.servingwebcontent.service;

import com.example.servingwebcontent.dao.VeDao;
import com.example.servingwebcontent.database.AivenConnection;
import com.example.servingwebcontent.models.Ve;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.sql.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Service
public class Ve30Service {

    @Autowired
    private VeDao veDAO;

    private void printHeader(String title) {
        System.out.println("\n================== üìå " + title + " ==================\n");
    }

    private void printFooter(String message) {
        System.out.println("\n================== ‚úÖ " + message + " ==================\n");
    }

    /**
     * ‚úÖ L·∫•y t·∫•t c·∫£ v√© c·ªßa m·ªôt kh√°ch h√†ng
     */
    public List<Ve> getVeListByKhachHang(int maKhachHang) {
        printHeader("L·∫§Y V√â C·ª¶A KH√ÅCH H√ÄNG M√É " + maKhachHang);
        List<Ve> list = veDAO.getVeByMaKhachHang(maKhachHang);
        System.out.println("üì¶ S·ªë v√© t√¨m ƒë∆∞·ª£c: " + list.size());
        printFooter("HO√ÄN T·∫§T TRUY V·∫§N V√â KH√ÅCH H√ÄNG");
        return list;
    }

    /**
     * ‚úÖ L·∫•y t·∫•t c·∫£ v√© trong h·ªá th·ªëng
     */
    public List<Ve> getAllVe() {
        printHeader("L·∫§Y TO√ÄN B·ªò V√â TRONG H·ªÜ TH·ªêNG");
        List<Ve> list = veDAO.getAll();
        System.out.println("üì¶ T·ªïng s·ªë v√© trong h·ªá th·ªëng: " + list.size());
        printFooter("HO√ÄN T·∫§T TRUY V·∫§N TO√ÄN B·ªò V√â");
        return list;
    }

    /**
     * ‚úÖ L·ªçc v√© s·∫Øp chi·∫øu trong 30 ph√∫t t·ªõi
     */
    public List<Ve> locVeSapChieuTrong30Phut(List<Ve> danhSachVe) {
        printHeader("B·∫ÆT ƒê·∫¶U L·ªåC V√â S·∫ÆP CHI·∫æU TRONG 30 PH√öT");

        List<Ve> ketQua = new ArrayList<>();
        LocalDateTime now = LocalDateTime.now();
        LocalDateTime in30Min = now.plusMinutes(30);

        System.out.println("‚è±Ô∏è Th·ªùi gian hi·ªán t·∫°i: " + now);
        System.out.println("‚è∞ Th·ªùi gian gi·ªõi h·∫°n: " + in30Min);
        System.out.println("üîé ƒêang ki·ªÉm tra t·ª´ng v√©...");

        String sql = "SELECT v.*, sc.NgayGioChieu FROM Ve v " +
                     "JOIN SuatChieu sc ON v.MaSuatChieu = sc.MaSuatChieu " +
                     "WHERE v.TrangThai = 'paid'";

        try (Connection conn = AivenConnection.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql);
             ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                Timestamp gioChieuDB = rs.getTimestamp("NgayGioChieu");
                int maVe = rs.getInt("MaVe");

                if (gioChieuDB != null) {
                    LocalDateTime gioChieu = gioChieuDB.toLocalDateTime();
                    System.out.printf("‚û°Ô∏è  V√© %-4d | Gi·ªù chi·∫øu: %-20s | ", maVe, gioChieu);

                    if (gioChieu.isAfter(now) && gioChieu.isBefore(in30Min)) {
                        System.out.println("‚úÖ H·ª¢P L·ªÜ");
                        Ve ve = new Ve(
                            maVe,
                            rs.getInt("MaSuatChieu"),
                            rs.getInt("MaPhong"),
                            rs.getString("SoGhe"),
                            rs.getInt("MaHoaDon"),
                            rs.getDouble("GiaVe"),
                            rs.getString("TrangThai"),
                            rs.getString("NgayDat")
                        );
                        ketQua.add(ve);
                    } else {
                        System.out.println("‚õî KH√îNG H·ª¢P L·ªÜ");
                    }
                } else {
                    System.out.println("‚ö†Ô∏è Kh√¥ng c√≥ gi·ªù chi·∫øu.");
                }
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói trong qu√° tr√¨nh l·ªçc v√©:");
            e.printStackTrace();
        }

        System.out.println("\nüìã S·ªë v√© h·ª£p l·ªá (s·∫Øp chi·∫øu): " + ketQua.size());
        printFooter("HO√ÄN T·∫§T L·ªåC V√â TRONG 30 PH√öT");
        return ketQua;
    }

    /**
     * ‚úÖ L·∫•y danh s√°ch m√£ kh√°ch h√†ng c√≥ v√© s·∫Øp chi·∫øu
     */
    public List<Integer> getDanhSachMaKhachHangSapChieu() {
        printHeader("L·∫§Y DANH S√ÅCH M√É KH√ÅCH H√ÄNG S·∫ÆP CHI·∫æU");
        List<Integer> list = veDAO.getMaKhachHangCuaVeSapChieuTrong30Phut();
        System.out.println("üë• S·ªë kh√°ch h√†ng c√≥ v√© s·∫Øp chi·∫øu: " + list.size());
        printFooter("HO√ÄN T·∫§T L·∫§Y M√É KH√ÅCH H√ÄNG");
        return list;
    }

    /**
     * ‚úÖ L·∫•y danh s√°ch v√© s·∫Øp chi·∫øu to√†n h·ªá th·ªëng
     */
    public List<Ve> getDanhSachVeSapChieuToanBo() {
        printHeader("L·ªåC TO√ÄN B·ªò V√â S·∫ÆP CHI·∫æU TO√ÄN H·ªÜ TH·ªêNG");
        return locVeSapChieuTrong30Phut(getAllVe());
    }
}
